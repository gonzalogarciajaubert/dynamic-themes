{"name":"dynamic-themes Plugin","body":"# dynamic-themes Plugin\r\n\r\nAuthor: Gonzalo Garcia Jaubert\r\n\r\nVersion: 0.1.0\r\n\r\n## Introduction\r\n\r\nThe **dynamic-themes plugin** allows your Grails application to load and render pages with your own theme ( **folders** with GSP templates and css) dinamically outside the scope of a web request. If you've ever used Tumblr or Wordpress then you know what a **theme** is and how it works.\r\n\r\nYou can process models and sections (your own tags) in your themes. \r\n\r\nThis plugin provides the following feature:\r\n\r\n* Easy way to add themes to your project\r\n* Build external gsp and css themes\r\n* Change the style of your pages with external css\r\n* Load external views\r\n* Load external templates\r\n\r\n### Further Reading \r\n\r\n* See [DynamicThemesExample](https://github.com/gonzalogarciajaubert/DynamicThemesExample)  application for examples.\r\n* See [dynamic-themes official page](http://dynamicthemes.dancingrails.com) \r\n* See [blog](http://dancingrails.com)\r\n* And follow @ggjaubert \r\n\r\n### Licensing\r\n\r\n`\r\nThis plugin is released under the Apache License. \r\n`\r\n\r\n## Quick Start\r\n\r\n### Install the plugin\r\n\r\nInstalling the plugin can be done in one of two ways:\r\n\r\n#### Installing the plugin using then Grails dependency DSL (Recommended)\r\n\r\nIn BuildConfig.groovy, add the dependency to your 'plugins' section:\r\n\r\n```groovy\r\nplugins {\r\n       \t...\r\n        \tcompile ':dynamic-themes:0.1'\r\n       \t...\r\n    }\r\n```\r\n    \r\nNote that the version (0.1 in the example above) should be change to refelect the version you would like to us\r\n\r\n\r\n#### Installing the plugin 'on-the-fly'\r\n\r\nSimply run the command `grails install-plugin dynamic-themes`. Note that this will install the latest version into the global scope, rather than the compile scope which is slightly cleaner, above.\r\n\r\n### Configure the plugin\r\n\r\nEdit `grails-appl-base-dir/conf/Config.groovy` to add:\r\n\r\n```groovy\r\ndynamicThemes {\r\n    development {\r\n\t\tresourceController.useCacheControl = true\r\n\t\tpreprocessor.urlThemes = 'themes' \r\n\t\tpreprocessor.fileSystemPath = 'web-app/themes'\r\n    }\r\n    production {\r\n\t\tresourceController.useCacheControl = true\r\n\t\tpreprocessor.urlThemes = 'themes' \r\n\t\tpreprocessor.fileSystemPath =  'themes'\r\n    }\r\n}\r\n```\r\n\r\nYou can define values for you development and production enviroment.\r\n\r\n- useCacheControl: Override to control the css cached.\r\n- urlThemes: Relative url for themes.\r\n- fileSystemPath: Relative file system path for themes. Default is web-app/themes\r\n\r\n\r\n## Scripts\r\n\r\nAfter installation you can call the DyncamicThemes script **grails dynamic-themes**, which will copy several files into your project. \r\n\r\n`\r\n  grails dynamic-themes\r\n`\r\n\r\nThis script will create a themes folder under web-app and copy to themes into it (default and default2).\r\n\r\n## HowTo's\r\n\r\nYou can test the plugin with the next views:\r\n\r\n* partialGSPHowTo: Example of partial gsp injection\r\n* GSPHowto: Example of full gsp injection\r\n* cssHowTo: Example of css injection\r\n\r\nIf you want full examples, visit [DynamicThemesExample](https://github.com/gonzalogarciajaubert/DynamicThemesExample)  \r\n\r\n## Themes\r\n\r\nThemes are folders with the following example structure:\r\n\r\n```groovy\r\nthemeName\r\n- \\icons\\*.png\r\n- \\images\\*.png\r\n- themeName.css\r\n- themeName.html\r\n- themeName.snapshot.png\r\n```\r\n\r\nThe only expected file is themeName.html. You can see two themes examples in the webapp dir: default and default2.\r\n\r\nThe default.html file contains a link to **webapps\\themes\\images\\grails_logo.png** with the next code: \r\n\r\n`html\r\n\t<img alt=\"imagen1\" src='${ImagesPath}/grails_logo.png'\">\r\n`\r\n\r\nThis html (a gsp) use the default.css stylesheet:\r\n\r\n`html\r\n\t<div class=\"fondodiv\">\r\n`\r\n\r\nAnd show two ways to see a list of elements. First with grails code:\r\n\r\n```html\r\n\t\t<g:each var=\"element\" in=\"${elements}\">\t\t\t\r\n\t\t\t\t<h2>${element}</h2>\r\n\t\t\t\t<hr>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"span11\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed neque magna, ...\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t</g:each>\r\n```\r\n\r\nAnd with sections:\r\n\r\n```html\r\n\t\t<ul>\r\n\t\t  #beginLoop#\r\n\t\t    <li>Element: <b>${element}</b>\r\n\t\t  #endLoop#\r\n\t\t</ul>\r\n```\r\n\r\n## Using the plugin\r\n\r\nUsing the **dynamic-themes plugin** in your application requires a few simple steps:\r\n\r\nProcess your theme and return to view:\r\n\r\n```groovy\r\n\tdef theme = preprocessorService.preprocess(themeName)\r\n\t[heme: theme]\r\n```\r\n\r\n**Optional**: If you want to inject sections (see _sections_):\r\n\r\n```groovy\r\n\t// Example of sections replace\r\n\tdef elements = \"['Post 1', 'Post 2', 'Post 3']\"\r\n\tdef sections = [\"#beginLoop#\": \"\"\"<g:each var=\"element\" in=\"${elements}\">\"\"\", \"\"\"#endLoop#\"\"\": \"\"\"</g:each>\"\"\"]\r\n```\r\n\r\n**Optional**: If you want to inject models (see _models_):\r\n\r\n```groovy\r\n\tdef themeName = \"default\"\r\n\tdef elementsList = ['Post 1', 'Post 2', 'Post 3']\r\n\tdef model = [ImagesPath: preprocessorService.getConfigParams(themeName).urlFolderImages, elements:elementsList]\r\n```\r\n\r\n**Optional**: Example for a snapshot (see _more_)\r\n\r\n```groovy\r\n\tdef snap = preprocessorService.getConfigParams(themeName).urlSnapshot\r\n```\r\n\r\n**Optional**: Process your theme and return to view with your optional params:\r\n\r\n```groovy\r\n\tdef theme = preprocessorService.preprocess(themeName , sections, model)\r\n```\r\n\r\n## Using the Tag Library\r\n\r\nTo inject a dynamic css in your view use the injectCss tag:\r\n\r\n```html\r\n\t<head>\r\n\t\t<meta name=\"layout\" content=\"main\">\r\n\t\t<title>cssHowTo</title>\r\n\t\t<g:injectCss themeName=\"${themeName}\" ImagesPath=\"true\" />\r\n\t\t<g:injectCss themeName=\"${themeName}\" ImagesPath=\"false\" model=\"[var1: 'hello']\"/>\r\n\t</head>\r\n```\r\n\r\nTo inject a dynamic html/gsp in your view use the injectGSP tag: \r\n\r\n```html\r\n\t<body>\r\n\t\tAn css and gsp dynamic-themes example. View source code for the css dynamic-themes.\r\n\t\t<g:injectGSP instance=\"${result}\"/>\r\n\t</body>\r\n```\r\n\r\n\r\n## Parameters\r\n\r\nWhen using the plugin you can use the next parameters:\r\n\r\n#### sections\r\n\r\nSections are code replaced before processing. Example:\r\n\r\n```html\r\n\t\t<ul>\r\n\t\t  #beginLoop#\r\n\t\t    <li>Element: <b>${element}</b>\r\n\t\t  #endLoop#\r\n\t\t</ul>\r\n```\r\n\r\nin your controller replace the secctions with your own code with:\r\n\r\n```groovy\r\n\t// Example of sections replace\r\n\tdef elements = \"['Post 1', 'Post 2', 'Post 3']\"\r\n\tdef sections = [\"#beginLoop#\": \"\"\"<g:each var=\"element\" in=\"${elements}\">\"\"\", \"\"\"#endLoop#\"\"\": \"\"\"</g:each>\"\"\"]\r\n```\r\n\r\n\r\n#### models\r\n\r\nYou can inject models in your theme. Example:\r\n\r\n```html\r\n    <g:each var=\"element\" in=\"${elements}\">\t\t\t\r\n\t\t\t\t<h2>${element}</h2>\r\n\t\t\t\t<hr>\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"span11\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla sed neque magna, ...\r\n\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t</g:each>\r\n```\r\n\r\nIn your controller use:\r\n```groovy\r\n\tdef themeName = \"default\"\r\n\tdef elementsList = ['Post 1', 'Post 2', 'Post 3']\r\n\tdef model = [ImagesPath: preprocessorService.getConfigParams(themeName).urlFolderImages, elements:elementsList]\r\n```\r\n\r\n#### others\r\n\r\nYou can inject other files. For example the snapshot of the theme with:\r\n\r\n```html\r\n\t\t<div class=\"hero-unit\">\r\n\t\t\t<h2>Snapshot for the theme</h2>\r\n\t\t\t<img src=\"${snapshot}\" style=\"width:200px\"/>\r\n\t\t</div>\r\n```\r\n\r\nIn your controller:\r\n\r\n```groovy\r\n\tdef snap = preprocessorService.getConfigParams(themeName).urlSnapshot\r\n```\r\n\r\nNote: The urlSnapshot is the root of the theme\r\n\r\n## Changelog\r\n\r\n;0.1.0 Initial version (November 29, 2012)\r\n\r\n","tagline":"Grails plugins","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}